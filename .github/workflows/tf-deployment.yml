name: CI/CD Pipeline

on:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "*"

jobs:
  terraform:
    runs-on: ubuntu-latest
    env:
      TF_AWS_ACCESS_KEY_ID: ${{ secrets.TF_AWS_ACCESS_KEY_ID }}
      TF_AWS_SECRET_ACCESS_KEY: ${{ secrets.TF_AWS_SECRET_ACCESS_KEY }}
      DB_USER_PROD: ${{ secrets.DB_USER_PROD }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure AWS CLI
        run: |
          aws configure set aws_access_key_id ${{ secrets.TF_AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.TF_AWS_SECRET_ACCESS_KEY }}
          aws configure set region us-west-1

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.3.0

      - name: Terraform Init
        run: terraform -chdir=infra init

      - name: Terraform Plan
        run: terraform -chdir=infra plan -var="db_username=${{ secrets.DB_USER_PROD }}" -var="db_password=${{ secrets.DB_PASSWORD }}"

  backend_deploy:
    runs-on: ubuntu-latest
    needs: terraform
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Navigate to backend directory
        run: cd backend

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # TODO: Build Docker image and deploy

  frontend_deploy:
    runs-on: ubuntu-latest
    needs: backend_deploy
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.TF_AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.TF_AWS_SECRET_ACCESS_KEY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Navigate to frontend directory
        run: cd frontend/bitmatch

      - name: list
        run: ls -a

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install dependencies
        run: |
          npm install

      - name: Build frontend
        run: |
          npm run build

      - name: Sync build to S3
        run: |
          aws s3 sync ./dist s3://bitmatch-frontend-bucket --delete

      - name: Invalidate CloudFront cache
        run: |
          aws cloudfront create-invalidation --distribution-id E29MAKOIPEX4G3 --paths "/*"
