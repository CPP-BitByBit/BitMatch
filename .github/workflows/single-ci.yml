name: CI/CD Pipeline

on:
  push:
    branches:
      - "*"
    paths:
      - "infra/**"
  pull_request:
    branches:
      - "*"
    paths:
      - "infra/**"
  workflow_dispatch:

jobs:
  terraform:
    runs-on: ubuntu-latest
    env:
      TF_AWS_ACCESS_KEY_ID: ${{ secrets.TF_AWS_ACCESS_KEY_ID }}
      TF_AWS_SECRET_ACCESS_KEY: ${{ secrets.TF_AWS_SECRET_ACCESS_KEY }}
      DB_USER_PROD: ${{ secrets.DB_USER_PROD }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure AWS CLI
        run: |
          aws configure set aws_access_key_id ${{ secrets.TF_AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.TF_AWS_SECRET_ACCESS_KEY }}
          aws configure set region us-west-1

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.3.0

      - name: Terraform Init
        run: terraform -chdir=infra init

      - name: Terraform Plan
        run: terraform -chdir=infra plan -var="db_username=${{ secrets.DB_USER_PROD }}" -var="db_password=${{ secrets.DB_PASSWORD }}"

      - name: Terraform Apply (for push to main)
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: terraform -chdir=infra apply -auto-approve -var="db_username=${{ secrets.DB_USER_PROD }}" -var="db_password=${{ secrets.DB_PASSWORD }}"

  backend:
    runs-on: ubuntu-latest
    needs: terraform # Ensures Terraform runs first
    env:
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_HOST: ${{ secrets.DB_HOST }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_STORAGE_BUCKET_NAME: ${{ secrets.AWS_STORAGE_BUCKET_NAME }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r backend/requirements.txt

      - name: Run db migrations
        run: |
          source venv/bin/activate
          python backend/manage.py migrate

      - name: Run projects app unit tests
        run: |
          source venv/bin/activate
          python -m coverage run backend/manage.py test projects
          coverage report
